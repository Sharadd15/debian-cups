#! /bin/sh /usr/share/dpatch/dpatch-run
## CVE-2015-3258-CVE-2015-3279.dpatch by  <santiagorr@riseup.net>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Fixed buffer overflow on size allocation of texttopdf
##Â DP: when working with extremely small line sizes, which causes the size
## DP: calculation to result in 0 (CVE-2015-3258, CVE-2015-3279)
## DP: Thanks to Stefan Cornelius from Red Hat for the patch.
## DP:
## DP: Backported from:
## DP: http://bzr.linuxfoundation.org/loggerhead/openprinting/cups-filters/revision/7363
## DP: http://bzr.linuxfoundation.org/loggerhead/openprinting/cups-filters/revision/7365

@DPATCH@
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' cups-1.4.4~/filter/textcommon.c cups-1.4.4/filter/textcommon.c
--- cups-1.4.4~/filter/textcommon.c	2015-07-18 07:44:38.000000000 -0300
+++ cups-1.4.4/filter/textcommon.c	2015-09-22 15:59:53.000000000 -0300
@@ -26,6 +26,7 @@
  */
 
 #include "textcommon.h"
+#include <limits.h>
 #include <cups/i18n.h>
 
 
@@ -640,6 +641,45 @@
   if (PrettyPrint)
     PageTop -= 216.0f / LinesPerInch;
 
+ /*
+  * Allocate memory for the page...
+  */
+
+  SizeColumns = (PageRight - PageLeft) / 72.0 * CharsPerInch;
+  SizeLines   = (PageTop - PageBottom) / 72.0 * LinesPerInch;
+
+ /*
+  * Enforce minimum size...
+  */
+  if (SizeColumns < 1)
+    SizeColumns = 1;
+  if (SizeLines < 1)
+    SizeLines = 1;
+
+  if (SizeLines >= INT_MAX / SizeColumns / sizeof(lchar_t))
+  {
+    fprintf(stderr, "ERROR: bad page size\n");
+    exit(1);
+  }
+
+  Page    = calloc(sizeof(lchar_t *), SizeLines);
+  if (!Page)
+  {
+    fprintf(stderr, "ERROR: cannot allocate memory for page\n");
+    exit(1);
+  }
+
+  Page[0] = calloc(sizeof(lchar_t), SizeColumns * SizeLines);
+  if (!Page[0])
+  {
+    free(Page);
+    fprintf(stderr, "ERROR: cannot allocate memory for page\n");
+    exit(1);
+  }
+
+  for (i = 1; i < SizeLines; i ++)
+    Page[i] = Page[0] + i * SizeColumns;
+
   Copies = atoi(argv[4]);
 
   WriteProlog(argv[3], argv[2], getenv("CLASSIFICATION"),
@@ -1115,6 +1155,8 @@
   if (ppd != NULL)
     ppdClose(ppd);
 
+  free(Page[0]);
+  free(Page);
   return (0);
 }
 
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' cups-1.4.4~/filter/texttops.c cups-1.4.4/filter/texttops.c
--- cups-1.4.4~/filter/texttops.c	2015-07-18 07:44:38.000000000 -0300
+++ cups-1.4.4/filter/texttops.c	2015-09-22 16:08:01.952614892 -0300
@@ -76,9 +76,6 @@
   puts("%%Trailer");
   printf("%%%%Pages: %d\n", NumPages);
   puts("%%EOF");
-
-  free(Page[0]);
-  free(Page);
 }
 
 
@@ -166,38 +163,14 @@
     PageTop    -= 36;
   }
 
- /*
-  * Allocate memory for the page...
-  */
-
-  SizeColumns = (PageRight - PageLeft) / 72.0 * CharsPerInch;
-  SizeLines   = (PageTop - PageBottom) / 72.0 * LinesPerInch;
-
   if (SizeColumns <= 0 || SizeColumns > 32767 ||
       SizeLines <= 0 || SizeLines > 32767)
   {
     _cupsLangPrintf(stderr, _("ERROR: Unable to print %dx%d text page!\n"),
                     SizeColumns, SizeLines);
     exit(1);
   }

-  if ((Page = calloc(sizeof(lchar_t *), SizeLines)) == NULL)
-  {
-    _cupsLangPrintf(stderr, _("ERROR: Unable to print %dx%d text page!\n"),
-                    SizeColumns, SizeLines);
-    exit(1);
-  }
-
-  if ((Page[0] = calloc(sizeof(lchar_t), SizeColumns * SizeLines)) == NULL)
-  {
-    _cupsLangPrintf(stderr, _("ERROR: Unable to print %dx%d text page!\n"),
-                    SizeColumns, SizeLines);
-    exit(1);
-  }
-
-  for (i = 1; i < SizeLines; i ++)
-    Page[i] = Page[0] + i * SizeColumns;
-
   if (PageColumns > 1)
   {
     ColumnGutter = CharsPerInch / 2;
